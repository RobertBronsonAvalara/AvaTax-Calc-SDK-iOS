# define output folder environment variable
UNIVERSAL_OUTPUTFOLDER=${BUILD_DIR}/${CONFIGURATION}-universal
LIBRARY_NAME=libAvaTax-Calc-SDK.a
 
# Step 1. Build Device and Simulator versions
xcodebuild -target AvaTax-Calc-SDK ONLY_ACTIVE_ARCH=NO -configuration ${CONFIGURATION} -sdk iphoneos  BUILD_DIR="${BUILD_DIR}" BUILD_ROOT="${BUILD_ROOT}"
xcodebuild -target AvaTax-Calc-SDK -configuration ${CONFIGURATION} -sdk iphonesimulator -arch i386 BUILD_DIR="${BUILD_DIR}" BUILD_ROOT="${BUILD_ROOT}"
 
# make sure the output directory exists
mkdir -p "${UNIVERSAL_OUTPUTFOLDER}"
 
# Step 2. Create universal binary file using lipo
lipo -create -output "${UNIVERSAL_OUTPUTFOLDER}/${LIBRARY_NAME}" "${BUILD_DIR}/${CONFIGURATION}-iphoneos/${LIBRARY_NAME}" "${BUILD_DIR}/${CONFIGURATION}-iphonesimulator/${LIBRARY_NAME}"
 
# Copy the header files so they'll be in the same place as the produced static library.
cp -R "${BUILD_DIR}/${CONFIGURATION}-iphoneos/include" "${UNIVERSAL_OUTPUTFOLDER}/"

# Add the README file
cp "${PROJECT_DIR}/README.txt" "${UNIVERSAL_OUTPUTFOLDER}/"

# Conveniently create a zip of the whole thing
RENAMED_SDK_FOLDER=${BUILD_DIR}/AvaTaxSDK
cp -R -f "${UNIVERSAL_OUTPUTFOLDER}" "${RENAMED_SDK_FOLDER}"
ditto -ck --rsrc --sequesterRsrc --keepParent  "${RENAMED_SDK_FOLDER}" "${BUILD_DIR}/AvaTaxSDK-iOS.zip"
rm -r "${RENAMED_SDK_FOLDER}"

